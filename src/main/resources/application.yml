    spring:
       application:
          name: AsyncConsumer
       rabbitmq:
          #host: b-74c42180-ee61-4e4f-ae74-39f5ff7a7f67.mq.us-east-2.amazonaws.com
          #port: 5671
          addresses: b-e52f0852-27eb-44ed-aac9-36ab9f7a8082.mq.us-east-2.amazonaws.com:5671
          username: rabbitmq1234
          password: rabbitmq1234
          ssl:
             enabled: true
    logging:
       level:
          Root: DEBUG
          org.springframework.web.filter.CommonsRequestLoggingFilter: INFO
          com.zaxxer.hikari.HikariConfig: INFO
          com.zaxxer.hikari.pool.HikariPool: DEBUG
       pattern:
          console: "%d [%thread] %-5level %logger{36} - %msg %mdc%n"   
    management:
       server:
          ssl:
             enabled: false
       endpoints:
          web:
             #base-path: /sssactuator
             exposure:
                include: "*"
#############################################################################################
#############################################################################################
    jmuscles:
       executors-config:
          restConfig:
             connectionTimeout: 10000
             readTimeout: 10000
          restCalls:
             test:
                url: http://localhost:8080/place/list/IN
                successCodePatterns:
                   200: null
             getDemoUser:
                url: https://gorest.co.in/public/v1/users
                successCodePatterns:
                   200: null
             createDemoUser:
                url: https://gorest.co.in/public/v1/users
                successCodePatterns:
                   200: null
                   401: null
          sqlProcedures:
             demo_proc_1:
                dskey: null
                procedure: procedure_name
                successKey: P_RESP_CODE
                successValue: '000'
          sqlQueries:
             insert_user_testdb:
                dskey: testdb
                query: insert into test.user(user_id, first_name, last_name, email, gender) values(:user_id, :first_name, :last_name,
                   :email, :gender);
                successResponse: null
#############################################################################################
    rabbitmq-config:
       exchanges:
       -  name: EXCHANGE_1
          type: direct
          parent: null
       queueSetsConfig:
          demoQueueSetConfig:
             exchange: EXCHANGE_1
             name: DEMO_QUEUE
             retrySetupDisabled: false
             arguments:
                primary:
                   -x-queue-type: quorum
                retry:
                   -x-queue-type: quorum
                abandoned:
                   -x-queue-type: quorum
       queueSetsProcessingConfig:
          demoQueueSetConfig:
             primary:
                disableProcessing: false
                listenerType: RequeueModifiedMessageListener
                concurrency: 1-5
                processor: asyncPayloadMessageProcessor
             retry:
                disableProcessing: false
                listenerType: RequeueModifiedMessageListener
                concurrency: 1-5
                processor: asyncPayloadMessageProcessor
                retryOnlyConfig:
                   acceptingMessage: true
                   retryAttempt: 2
                   retryAfterDelay: true
                   retryInterval:
                      - 300
                      - 600
                      - 1200
             abandoned:
                disableProcessing: true
                listenerType: RequeueModifiedMessageListener
                concurrency: 1-5
                processor: persistMessageToDBProcessor
#############################################################################################
#############################################################################################
#############################################################################################
